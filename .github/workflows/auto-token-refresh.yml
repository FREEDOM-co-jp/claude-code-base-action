name: Claude OAuth Token Monitor

on:
  schedule:
    # ÊØéÊó•ÂçàÂâç6ÊôÇÔºàUTCÔºâ„Å´„Éà„Éº„ÇØ„É≥„ÅÆÁä∂ÊÖã„Çí„ÉÅ„Çß„ÉÉ„ÇØ
    - cron: '0 6 * * *'
    # ÊØéÊó•ÂçàÂæå6ÊôÇÔºàUTCÔºâ„Å´„ÇÇËøΩÂä†„ÉÅ„Çß„ÉÉ„ÇØ
    - cron: '0 18 * * *'
  workflow_dispatch:
    inputs:
      force_check:
        description: 'Force token status check'
        required: false
        default: false
        type: boolean

jobs:
  monitor-token:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          npm install
          
      - name: Check token status
        id: check-token
        run: |
          node -e "
          const fs = require('fs');
          const expiresAt = '${{ secrets.CLAUDE_EXPIRES_AT }}';
          const forceCheck = '${{ github.event.inputs.force_check }}' === 'true';
          const now = Date.now();
          const expiryTime = parseInt(expiresAt);
          const hoursLeft = Math.floor((expiryTime - now) / (1000 * 60 * 60));
          const daysLeft = Math.floor(hoursLeft / 24);
          
          console.log('=== Claude Token Status Check ===');
          console.log('Current time:', new Date(now).toISOString());
          console.log('Token expires at:', new Date(expiryTime).toISOString());
          console.log('Hours until expiry:', hoursLeft);
          console.log('Days until expiry:', daysLeft);
          console.log('Force check:', forceCheck);
          
          let alertLevel = 'none';
          let alertMessage = '';
          let needsAction = false;
          
          if (hoursLeft <= 0) {
            alertLevel = 'critical';
            alertMessage = 'üö® CRITICAL: Token has EXPIRED!';
            needsAction = true;
          } else if (hoursLeft <= 6) {
            alertLevel = 'urgent';
            alertMessage = '‚ö†Ô∏è URGENT: Token expires in ' + hoursLeft + ' hours';
            needsAction = true;
          } else if (hoursLeft <= 24) {
            alertLevel = 'warning';
            alertMessage = '‚ö†Ô∏è WARNING: Token expires in ' + hoursLeft + ' hours (less than 1 day)';
            needsAction = true;
          } else if (daysLeft <= 3) {
            alertLevel = 'notice';
            alertMessage = 'üì¢ NOTICE: Token expires in ' + daysLeft + ' days';
            needsAction = true;
          } else if (forceCheck) {
            alertLevel = 'info';
            alertMessage = '‚ÑπÔ∏è INFO: Token is healthy, expires in ' + daysLeft + ' days';
            needsAction = false;
          }
          
          console.log('Alert level:', alertLevel);
          console.log('Alert message:', alertMessage);
          console.log('Needs action:', needsAction);
          
          fs.appendFileSync(process.env.GITHUB_OUTPUT, 'alert_level=' + alertLevel + '\n');
          fs.appendFileSync(process.env.GITHUB_OUTPUT, 'alert_message=' + alertMessage + '\n');
          fs.appendFileSync(process.env.GITHUB_OUTPUT, 'needs_action=' + needsAction + '\n');
          fs.appendFileSync(process.env.GITHUB_OUTPUT, 'hours_left=' + hoursLeft + '\n');
          fs.appendFileSync(process.env.GITHUB_OUTPUT, 'days_left=' + daysLeft + '\n');
          fs.appendFileSync(process.env.GITHUB_OUTPUT, 'expires_at=' + new Date(expiryTime).toISOString() + '\n');
          
          console.log('=== End Token Status Check ===');
          "
          
      - name: Send workflow summary (primary notification)
        if: steps.check-token.outputs.needs_action == 'true'
        run: |
          echo "## üîë Claude OAuth Token Renewal Alert (claude-code-base-action)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ‚ö†Ô∏è **RENEWAL NEEDED SOON**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Token Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Current Status**: ${{ steps.check-token.outputs.alert_message }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Expires At**: ${{ steps.check-token.outputs.expires_at }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time Remaining**: ${{ steps.check-token.outputs.hours_left }} hours (${{ steps.check-token.outputs.days_left }} days)" >> $GITHUB_STEP_SUMMARY
          echo "- **Alert Level**: ${{ steps.check-token.outputs.alert_level }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Required Actions" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. **Login to Claude.ai** in your browser" >> $GITHUB_STEP_SUMMARY
          echo "2. **Open Developer Tools** (F12)" >> $GITHUB_STEP_SUMMARY
          echo "3. **Go to Application/Storage tab** ‚Üí Cookies ‚Üí claude.ai" >> $GITHUB_STEP_SUMMARY
          echo "4. **Copy the following values**:" >> $GITHUB_STEP_SUMMARY
          echo "   - \`sessionKey\` (this is your access token)" >> $GITHUB_STEP_SUMMARY
          echo "   - \`refresh_token\`" >> $GITHUB_STEP_SUMMARY
          echo "5. **Update Organization Secrets** (recommended for multiple repositories):" >> $GITHUB_STEP_SUMMARY
          echo "   - Go to **Organization Settings** ‚Üí **Secrets and variables** ‚Üí **Actions**" >> $GITHUB_STEP_SUMMARY
          echo "   - Update **Organization secrets**:" >> $GITHUB_STEP_SUMMARY
          echo "     - \`CLAUDE_ACCESS_TOKEN\` with the sessionKey value" >> $GITHUB_STEP_SUMMARY
          echo "     - \`CLAUDE_REFRESH_TOKEN\` with the refresh_token value" >> $GITHUB_STEP_SUMMARY
          echo "     - \`CLAUDE_EXPIRES_AT\` with new expiration timestamp" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Automation Status" >> $GITHUB_STEP_SUMMARY
          echo "- ‚ùå Automatic refresh: **DISABLED** (Cloudflare blocking)" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Monitoring: **ACTIVE**" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Notifications: **ACTIVE**" >> $GITHUB_STEP_SUMMARY
          echo "- üìã Using workflow summary for notifications" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Repository Type" >> $GITHUB_STEP_SUMMARY
          echo "- üîß **claude-code-base-action**: Programmatic execution within workflows" >> $GITHUB_STEP_SUMMARY
          echo "- üîó **Related**: claude-code-action (Interactive PR/Issue assistant)" >> $GITHUB_STEP_SUMMARY
            
      - name: Send Slack notification
        if: steps.check-token.outputs.needs_action == 'true'
        run: |
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            ALERT_LEVEL="${{ steps.check-token.outputs.alert_level }}"
            ALERT_MESSAGE="${{ steps.check-token.outputs.alert_message }}";
            HOURS_LEFT="${{ steps.check-token.outputs.hours_left }}";
            EXPIRES_AT="${{ steps.check-token.outputs.expires_at }}";
            
            # Set color based on alert level
            case $ALERT_LEVEL in
              "critical") COLOR="#FF0000" ;;
              "urgent") COLOR="#FF6600" ;;
              "warning") COLOR="#FFAA00" ;;
              "notice") COLOR="#0099FF" ;;
              *) COLOR="#808080" ;;
            esac
            
            curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"attachments\": [{
                  \"color\": \"$COLOR\",
                  \"title\": \"üîë Claude OAuth Token Renewal Required (claude-code-base-action)\",
                  \"text\": \"$ALERT_MESSAGE\",
                  \"fields\": [
                    {
                      \"title\": \"Repository\",
                      \"value\": \"${{ github.repository }}\",
                      \"short\": true
                    },
                    {
                      \"title\": \"Time Remaining\",
                      \"value\": \"$HOURS_LEFT hours\",
                      \"short\": true
                    },
                    {
                      \"title\": \"Expires At\",
                      \"value\": \"$EXPIRES_AT\",
                      \"short\": false
                    },
                    {
                      \"title\": \"Action Required\",
                      \"value\": \"Update Organization Secrets to apply to all 20+ repositories automatically - check GitHub workflow summary for detailed instructions\",
                      \"short\": false
                    }
                  ],
                  \"footer\": \"Claude Token Monitor (claude-code-base-action)\",
                  \"ts\": $(date +%s)
                }]
              }" \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          else
            echo "SLACK_WEBHOOK_URL not configured, skipping Slack notification"
          fi
          
      - name: Log monitoring results
        if: always()
        run: |
          echo "=== Claude OAuth Token Monitoring Results (claude-code-base-action) ==="
          echo "Timestamp: $(date -u --iso-8601=seconds)"
          echo "Alert Level: ${{ steps.check-token.outputs.alert_level }}"
          echo "Alert Message: ${{ steps.check-token.outputs.alert_message }}"
          echo "Hours Left: ${{ steps.check-token.outputs.hours_left }}"
          echo "Days Left: ${{ steps.check-token.outputs.days_left }}"
          echo "Expires At: ${{ steps.check-token.outputs.expires_at }}"
          echo "Needs Action: ${{ steps.check-token.outputs.needs_action }}"
          echo "Repository Type: claude-code-base-action (Programmatic execution)"
          echo "============================================="
          
      - name: Update monitoring status
        if: always()
        run: |
          echo "Token monitoring completed successfully"
          if [ "${{ steps.check-token.outputs.needs_action }}" = "true" ]; then
            echo "‚ö†Ô∏è Action required: Token renewal needed"
            exit 0  # Don't fail the workflow, just alert
          else
            echo "‚úÖ Token status: OK"
          fi 